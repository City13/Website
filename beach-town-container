<?php
/**
 * Beach Town Container
 *
 * This template creates a full-width container with an ACF background image,
 * and MAXIMUM SIZE title text (up to 2 lines).
 *
 * @package Nick
 * @version 2.1
 * @location templates-parts/flexible-content/beach-town-container.php
 */

// Check if ACF is active
if (!function_exists('get_field')) {
    return;
}

// Try to get fields using both methods
// For direct field access
$background_image = get_field('background_image');
$button_text = get_field('button_text');
$button_link = get_field('button_link');
$title_text = get_field('title_text');

// If fields are empty, try sub_field (for flexible content)
if (empty($background_image)) {
    $background_image = get_sub_field('background_image');
}
if (empty($button_text)) {
    $button_text = get_sub_field('button_text');
}
if (empty($button_link)) {
    $button_link = get_sub_field('button_link');
}
if (empty($title_text)) {
    $title_text = get_sub_field('title_text');
}

// Process title text to create line breaks for two-word beach names
if (!empty($title_text)) {
    // Check if title contains multiple words
    $words = explode(' ', $title_text);
    if (count($words) >= 2) {
        // For beach names like "Rosemary Beach" or "Blue Mountain Beach"
        // Add a line break after the first word (or second word for 3+ word names)
        $break_position = count($words) > 2 ? 2 : 1;
        $first_part = array_slice($words, 0, $break_position);
        $second_part = array_slice($words, $break_position);
        
        $title_text_formatted = implode(' ', $first_part) . '<br>' . implode(' ', $second_part);
    } else {
        // For single word names like "Seagrove"
        $title_text_formatted = $title_text;
    }
} else {
    $title_text_formatted = '';
}

// Default values if fields are empty
$background_style = '';
if ($background_image && isset($background_image['url'])) {
    $background_style = 'background-image: url(' . esc_url($background_image['url']) . '); background-size: cover; background-position: center;';
}

// Container height - adjusted to 650px
$container_height = '650px';

// Generate a unique ID for this instance
$unique_id = 'beach-town-' . uniqid();
?>

<div id="<?php echo esc_attr($unique_id); ?>" class="beach-town-container" style="width: 100%; height: <?php echo esc_attr($container_height); ?>; <?php echo $background_style; ?>">
    <div class="container-inner">
        <?php if ($title_text) : ?>
        <div class="beach-town-title-wrapper">
            <h2 class="beach-town-title fit-text"><?php echo wp_kses_post($title_text_formatted); ?></h2>
        </div>
        <?php endif; ?>
        
        <?php if ($button_text && $button_link) : ?>
            <a href="<?php echo esc_url($button_link); ?>" class="beach-town-button">
                <?php echo esc_html($button_text); ?>
            </a>
        <?php endif; ?>
    </div>
</div>

<style>
    .beach-town-container {
        margin: 0;
        padding: 0;
        position: relative;
        overflow: hidden;
    }
    
    .container-inner {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        height: 100%;
        width: 100%;
        padding: 0;
    }
    
    .beach-town-title-wrapper {
        width: 100%;
        height: 65%; /* Changed from fixed 400px to 65% of container height */
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0;
        margin: 0;
        margin-top: -20px; /* Negative margin to use more vertical space */
    }
    
    .beach-town-title {
        color: #ffffff;
        opacity: 0.85;
        font-weight: 900;
        text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4); 
        margin: 0;
        width: 100%;
        text-transform: uppercase;
        letter-spacing: 1px;
        line-height: 0.8; /* Tighter line height for more space */
        text-align: center;
        display: inline-block;
        padding: 0;
        white-space: normal; /* Allow wrapping but preserve center alignment */
    }
    
    /* For two-line titles, override the white-space */
    .beach-town-title.has-break {
        white-space: normal;
    }
    
    .beach-town-button {
        display: inline-block;
        padding: 12px 28px; /* Reduced padding around text */
        background-color: #6ec0b0;
        color: #ffffff;
        text-decoration: none;
        border-radius: 3px;
        font-weight: 700;
        font-size: 2rem;
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
        transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
        margin-bottom: 40px;
        margin-top: -50px;
    }

    .beach-town-button:hover {
        transform: scale(1.05);
        background-color: #8fd9c9; /* Brighter green on hover */
        color: #ffffff; /* Ensure text stays white */
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Get the specific container
    const container = document.getElementById('<?php echo esc_js($unique_id); ?>');
    if (!container) return;
    
    const titleElement = container.querySelector('.fit-text');
    const titleWrapper = container.querySelector('.beach-town-title-wrapper');
    
    if (!titleElement || !titleWrapper) return;
    
    // Check if title has a line break and add class accordingly
    if (titleElement.innerHTML.includes('<br>')) {
        titleElement.classList.add('has-break');
        titleElement.style.lineHeight = '0.8'; // Tighter for two lines
    }
    
    function findMaxFontSize() {
        const containerWidth = titleWrapper.offsetWidth;
        const containerHeight = titleWrapper.offsetHeight;

        let fontSize = 800; // Start with large font
        titleElement.style.fontSize = fontSize + 'px';

        const doesFit = () => {
            return (
                titleElement.scrollHeight <= containerHeight &&
                titleElement.scrollWidth <= containerWidth
            );
        };

        while (!doesFit() && fontSize > 10) {
            fontSize -= 5;
            titleElement.style.fontSize = fontSize + 'px';
        }

        fontSize = Math.floor(fontSize * 0.98); // Final adjustment
        titleElement.style.fontSize = fontSize + 'px';
    }
    
    // Initial sizing
    findMaxFontSize();
    
    // Update on resize
    let resizeTimeout;
    window.addEventListener('resize', function() {
        clearTimeout(resizeTimeout);
        resizeTimeout = setTimeout(findMaxFontSize, 100);
    });
});
</script>
